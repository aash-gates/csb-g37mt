{"version":3,"sources":["components/Button.js","components/Display.js","components/Calculator.js","index.js"],"names":["Button","props","classes","double","triple","operation","className","onClick","click","label","Display","value","initialState","displayValue","clearDisplay","values","current","Calculator","clearMemory","setState","setOperation","state","equals","currentOperation","execOperation","addDigit","digit","includes","i","newValue","parseFloat","console","log","this","React","Component","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.59e0f045.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Button.css\";\n\nexport default function Button(props){\n  let classes = \"button \";\n  classes+=props.double ? \"double\" : \"\";\n  classes+=props.triple ? \"triple\" : \"\";\n  classes+=props.operation ? \"operation\" : \"\";\n\n  return <button className={classes} onClick={() => props.click && props.click(props.label)}>\n    {props.label}\n  </button>\n}","import React from \"react\";\nimport \"./Display.css\";\n\nexport default function Display(props){\n  return <div className=\"display\">{props.value}</div>\n}","import React from \"react\";\nimport Button from \"./Button\";\nimport Display from \"./Display\";\nimport \"./Calculator.css\";\n\nconst initialState = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0\n};\n\nexport default class Calculator extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = { ...initialState };\n  }\n\n  clearMemory = () => {\n    this.setState({ ...initialState });\n  }\n\n  setOperation = operation => {\n    if(this.state.current === 0){\n      // guarda a operação e prepara para digitar o segundo valor\n      this.setState({ operation, current: 1, clearDisplay: true });\n    }else{\n      // calcula o resultado\n      const equals = operation === '=';\n      const currentOperation = this.state.operation;\n      \n      const values = [...this.state.values];\n      values[0] = this.execOperation(values, currentOperation);\n      values[1] = 0;\n\n      this.setState({\n        displayValue: values[0],\n        operation: equals ? null : operation,\n        current: equals ? 0 : 1,\n        clearDisplay: !equals,\n        values\n      });\n    }\n  }\n\n  execOperation = (values, operation) => {\n    switch(operation){\n      case '+':\n        return values[0] + values[1];\n      case '-':\n        return values[0] - values[1];\n      case '*':\n        return values[0] * values[1];\n      case '/':\n        return values[0] / values[1];\n      default:\n        return values[0];\n    }\n  }\n\n  addDigit = digit => {\n    // não permite usar dois pontos\n    if(digit === '.' && this.state.displayValue.includes('.')){\n      return;\n    }\n    // limpa o display se tiver apenas zero ou antes de inserir um novo número\n    const clearDisplay = this.state.displayValue === '0' || this.state.clearDisplay;\n    // mostra o novo valor\n    const currentValue = clearDisplay ? '' : this.state.displayValue;\n    const displayValue = currentValue + digit;\n    this.setState({ displayValue, clearDisplay: false });\n    // guarda o valor mostrado em this.state.values\n    if(digit !== '.'){\n      const i = this.state.current;\n      const newValue = parseFloat(displayValue);\n      console.log(newValue)\n      const values = [...this.state.values];\n      values[i] = newValue;\n      this.setState({ values });\n    }\n  }\n\n  render() {\n    return <div className=\"calculator\">\n      <Display value={this.state.displayValue} />\n      <Button label=\"AC\" click={this.clearMemory} triple />\n      <Button label=\"/\" click={this.setOperation} operation />\n      <Button label=\"7\" click={this.addDigit} />\n      <Button label=\"8\" click={this.addDigit} />\n      <Button label=\"9\" click={this.addDigit} />\n      <Button label=\"*\" click={this.setOperation} operation />\n      <Button label=\"4\" click={this.addDigit} />\n      <Button label=\"5\" click={this.addDigit} />\n      <Button label=\"6\" click={this.addDigit} />\n      <Button label=\"-\" click={this.setOperation} operation />\n      <Button label=\"1\" click={this.addDigit} />\n      <Button label=\"2\" click={this.addDigit} />\n      <Button label=\"3\" click={this.addDigit} />\n      <Button label=\"+\" click={this.setOperation} operation />\n      <Button label=\"0\" click={this.addDigit} double />\n      <Button label=\".\" click={this.addDigit} />\n      <Button label=\"=\" click={this.setOperation} operation />\n    </div>;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Calculator from \"./components/Calculator\";\nimport \"./styles.css\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}